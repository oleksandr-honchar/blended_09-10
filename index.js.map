{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/tasks.js","../src/js/markup-tasks.js","../src/js/render-tasks.js","../src/js/local-storage-api.js","../src/main.js"],"sourcesContent":["// refs.js (Make sure to update this)\nexport const taskForm = document.querySelector('#task-form'); // Correctly linked to the form by its id\nexport const taskName = document.querySelector('[name=\"taskName\"]'); // Correctly linked to the input for task title\nexport const taskDescription = document.querySelector(\n  '[name=\"taskDescription\"]'\n); // Correctly linked to the input for task description\n","import { taskName, taskDescription } from './refs.js'; // Import references\n\nexport const createTask = event => {\n  event.preventDefault(); // Prevent default form submission\n\n  const task = {\n    id: Date.now(), // Use current timestamp as task ID\n    title: taskName.value.trim(), // Get title from taskName input\n    description: taskDescription.value.trim(), // Get description from taskDescription input\n  };\n\n  // Code to save this task to local storage or render it to the page\n};\n","export const createMarkup = task => {\n  return `\n    <li class=\"task-list-item\" id=\"${task.id}\">\n      <button class=\"task-list-item-btn\">Delete</button>\n        <h3>${task.title}</h3>\n        <p>${task.description}</p>\n     </li>\n  `;\n};\n","import { createMarkup } from './markup-tasks.js';\n\nexport const addTasks = tasks => {\n  const taskList = document.querySelector('#task-list'); // Make sure the selector is correct\n  taskList.innerHTML = ''; // Clear the existing list\n\n  tasks.forEach(task => {\n    taskList.insertAdjacentHTML('beforeend', createMarkup(task)); // Add the new tasks to the list\n  });\n};\n","const LS_KEY = 'tasks';\nexport const addToLocalStorage = array => {\n  localStorage.setItem(LS_KEY, JSON.stringify(array));\n};\n\nexport const getFromLocalStorage = () =>\n  JSON.parse(localStorage.getItem(LS_KEY)) || [];\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nimport { taskForm, taskName, taskDescription } from './js/refs.js'; // Import refs correctly\nimport { createTask } from './js/tasks.js'; // Import function to create tasks\nimport { addTasks } from './js/render-tasks.js'; // Function to render tasks\nimport { getFromLocalStorage } from './js/local-storage-api.js'; // To get tasks from local storage\n\ntaskForm.addEventListener('submit', createTask); // Add event listener for form submission\n\n// Fetch tasks from local storage and render them if they exist\nconst tasks = getFromLocalStorage();\nif (tasks.length) {\n  addTasks(tasks); // Render tasks if they exist\n}\n"],"names":["taskForm","taskName","taskDescription","createTask","event","createMarkup","task","addTasks","tasks","taskList","LS_KEY","getFromLocalStorage"],"mappings":"ssBACO,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAW,SAAS,cAAc,mBAAmB,EACrDC,EAAkB,SAAS,cACtC,0BACF,ECHaC,EAAaC,GAAS,CACjCA,EAAM,eAAc,EAIXH,EAAS,MAAM,KAAM,EACfC,EAAgB,MAAM,KAAM,CAI7C,ECZaG,EAAeC,GACnB;AAAA,qCAC4BA,EAAK,EAAE;AAAA;AAAA,cAE9BA,EAAK,KAAK;AAAA,aACXA,EAAK,WAAW;AAAA;AAAA,ICHhBC,EAAWC,GAAS,CAC/B,MAAMC,EAAW,SAAS,cAAc,YAAY,EACpDA,EAAS,UAAY,GAErBD,EAAM,QAAQF,GAAQ,CACpBG,EAAS,mBAAmB,YAAaJ,EAAaC,CAAI,CAAC,CAC/D,CAAG,CACH,ECTMI,EAAS,QAKFC,EAAsB,IACjC,KAAK,MAAM,aAAa,QAAQD,CAAM,CAAC,GAAK,CAAE,ECgBhDV,EAAS,iBAAiB,SAAUG,CAAU,EAG9C,MAAMK,EAAQG,EAAqB,EAC/BH,EAAM,QACRD,EAASC,CAAK"}